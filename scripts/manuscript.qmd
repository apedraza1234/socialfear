---
title: "Social Conditions of Fear"
author:
  - Alejandra Pedraza
  - W. Jamie Yang
abstract: "TBW" # this is where abstract should be pasted 
format: html
highlight-style: pygments
editor: visual
execute:
  eval: true # change to false before final submission
  echo: true
  message: false
  warning: false
code-fold: true
code-summary: "Show the code"
embed-resources: true
bibliography: references.bib
---

# Introduction

# Methods

# Results

# Discussion

# Codebook

**Dependent Variable**

-   "fear": Is there any area right around here--that is, within a mile--where you would be afraid to walk alone at night?

**Sociodemographics Variables**

-   "born": Were you born in this country?

-   "age"

-   "sexnow1": Do you describe yourself as male, female, or transgender? *This is self-described gender.*

-   "sex": Code respondent's sex *This is gender presentation as interpreted by the interviewer.*

-   "sexornt": Which of the following best describes you?

-   "racerank1": If you had to choose, which of these races do you identify most with? *Kept this race variable here instead of "race" because it allows more heterogeneity within group.*

-   "hispanic": Are you Spanish, Hispanic, or Latino/Latina? IF YES: Which group are you from?

-   "degree": Respondent's degree.

-   "uscitzn": Are you a US citizen?

-   "dwelown": (Do you/Does your family) own your (home/apartment), pay rent, or what?

**Other Controls**

-   "attend": How often do you attend religious services?

-   "raclive": Are there any ("whites" for black respondents, "blacks" for non-black respondents) living in this neighborhood now?

-   "happy": Taken all together, how would you say things are these days--would you say that you are very happy, pretty happy, or not too happy?

-   "health": Would you say your own health, in general, is excellent, good, fair, or poor?

-   "helpful": Would you say that most of the time people try to be helpful, or that they are mostly just looking out for themselves?

-   "fair": Do you think most people would try to take advantage of you if they got a chance, or would they try to be fair?

-   "trust": Generally speaking, would you say that most people can be trusted or that you can't be too careful in dealing with people?

-   "partnrs5": since February/March 2015, and including the past 12 months, how many sex partners have you had in that five year period?

# Data Cleaning

```{r}
#| label: load-packages
#| include: false

library(tidyverse)
library(dplyr)
library(tidyr)
library(here)
library(rio)
library(janitor)
library(knitr)
library(kableExtra)
library(mice)
library(forcats)
library(ggplot2)
```

```{r}
#| label: loading data 
gss <- import(here("data", "GSS.xlsx")) %>%
  as_tibble() %>% 
  clean_names()

```

```{r}
#| label: filtering 2022 data
gss2022 <- gss %>% 
  filter(year == "2022") 

```

```{r}
#| label: select-variables
data <- gss2022 %>% 
    select(age, sex, sexnow1, sexornt, degree, attend, raclive, happy, health, helpful, fair, trust, fear, partnrs5, racerank1, uscitzn, dwelown) 

```

The GSS codes missing data as either ".i: Inapplicable", ".n: No answer", ".d: Do not Know/Cannot Choose", and ".s: Skipped on Web. For the purposes of this project, we are considering all of the above as missing values. Below we recode all these indicators as NAs. This is necessary to run mice imputations to address missing values.

```{r}
#| label: coding all missing data as NA 

missing_vec <- c(".i:  Inapplicable", ".n:  No answer", ".d:  Do not Know/Cannot Choose", ".s:  Skipped on Web")
	
na_data <- data %>% 
  mutate(across(c(age, sex, sexnow1, sexornt, degree, attend, raclive, happy, health, helpful, fair, trust, fear, partnrs5, racerank1, uscitzn, dwelown), 
                ~ifelse(. %in% missing_vec, NA_character_, .)))

```

To deal with the large amount of missing values, we used mice imputations. Currently, there are errors in my code, so this is not running correctly. Feedback welcomed.

```{r}
#| label: mice imputation
#| eval: false
complete5 <- mice(na_data, 
                 m = 5, 
                 seed = 25)

summary(complete(complete5, 1))

temp <- complete(complete5, action = "long", include = TRUE)

tidydata_complete <- as.mids(temp)

save(tidydata_complete, file = "data/tidydata_complete.RData")

```

Fear is our dependent variable, so the first step was to remove NAs for that variabble. 

Race/ ethnicity is an important control for our models. First, we sought to create a combined race variable from the variables "race" and "hispanic." After looking at the data, we saw that the options for the race variable were "Black, White, Other." This does not provide the control we need. So, we opted to use the "racerank1" variable, because participants were able to select from 16 different options: White, Black or African-American, Asian Indian, Chinese, Filipino, Japanese, Korean, Vietnamese, Other Asian, Guamanian or Chamorro, Samoan, Other Pacific Islander, Some other race, and Hispanic. We factored and recoded these to White, Black, Hispanic, Asian, NHPI (Native Hawaiian or Pacific Islander), AIAN (American Indian, Alaska Native), and Other. We understand that these categories are problematic and contentious, however they are the standard with quantitative data.

```{r}
#| label: recoding variables 
tidydata <- na_data %>% 
  filter(!is.na(fear)) %>% 
  mutate(fear = factor(case_when(fear == "NO" ~ "no",
                                 fear == "YES" ~ "yes"))) %>% 
  mutate(racecombo = 
           factor(case_when(racerank1 == "White" ~ "White",
                     racerank1 == "Black or African-American" ~ "Black",
                     racerank1 == "Hispanic" ~ "Hispanic",
                     racerank1 == "Asian Indian" | racerank1 ==  "Chinese" |
                       racerank1 ==  "Filipino" | racerank1 ==  "Japanese" | 
                       racerank1 ==  "Korean" |  racerank1 ==  "Vietnamese" |
                       racerank1 ==  "Other Asian" ~ "Asian",
                     racerank1 == "American Indian or Alaska Native" ~ "AIAN",
                     racerank1 == "Guamanian or Chamorro" | racerank1 == "Samoan" |
                       racerank1 == "Other Pacific Islander" ~ "NHPI",
                      racerank1 == "Some other race" ~ "Other"))) %>% 
  mutate(racecombo = fct_relevel(racecombo, 
              "White",
              "Black", 
              "Asian",
              "Hispanic",
              "AIAN",
              "NHPI",
              "Other")) %>%   
  mutate(partnrs5 = 
           factor(case_when(partnrs5 == "NO PARTNERS" ~ "0",
                            partnrs5 == "1 PARTNER" | partnrs5 == "2 PARTNERS" |
                              partnrs5 == "3 PARTNERS" | 
                              partnrs5 == "4 PARTNERS" ~ "Less than 5",
                            partnrs5 == "5-10 PARTNERS" ~ "5-10",
                            partnrs5 == "11-20 PARTNERS" ~ "11-20",
                            partnrs5 == "21-100 PARTNERS" ~ "21-100",
                            partnrs5 == "MORE THAN 100 PARTNERS" ~ "100 or more",
                            .default = NA))) %>%
  mutate(partnrs5 = fct_relevel(partnrs5,
                                "0",
                                "Less than 5",
                                "5-10",
                                "11-20",
                                "21-100",
                                "100 or more")) %>%
  mutate(uscitzn = 
           factor(case_when(uscitzn == "A u.s. citizen" | uscitzn == "A u.s. citizen born in puerto rico, the u.s. virgin islands, or the northern marianas islands (if volunteered)" |
                       uscitzn == "Born outside of the u.s. to parents who were u.s. citizens at that time (if volunteered)" ~ "Yes",
                     uscitzn == "Not a u.s. citizen" ~ "No",
                     .default = NA))) %>% 
   mutate(dwelown =
           factor(case_when(dwelown == "Own or is buying" ~ "Owner",
                            dwelown == "Pays rent" ~ "Renter",
                            dwelown == "Other" ~ "Other"))) %>% 
  mutate(degree = fct_relevel(degree, 
                              "Less than high school",
                              "High school",
                              "Associate/junior college",
                              "Bachelor's",
                              "Graduate")) %>% 
  mutate(attend = fct_relevel(attend, 
                              "Never",
                              "Less than once a year",
                              "About once or twice a year",
                              "2-3 times a month",
                              "Nearly every week",
                              "Every week",
                              "Several times a week")) %>% 
  mutate(happy = fct_relevel(happy, 
                             "Not too happy",
                             "Pretty happy",
                             "Very happy",)) %>% 
  mutate(health = fct_relevel(health, 
                              "Poor",
                              "Fair",
                              "Good",
                              "Excellent")) %>% 
  mutate(helpful = fct_relevel(helpful, 
                               "Looking out for themselves",
                               "Try to be helpful",
                               "Depends")) %>% 
  mutate(fair = fct_relevel(fair, 
                            "Would take advantage of you",
                            "Would try to be fair",
                            "Depends")) %>% 
  mutate(trust = fct_relevel(trust, 
                             "Can't be too careful",
                             "Can trust",
                             "Depends")) %>% 
  select(age, sex, sexnow1, sexornt, degree, attend, raclive, happy, health, helpful, fair, trust, fear, partnrs5, racecombo, uscitzn, dwelown) 
  
```

```{r}
#| label: creating a smaller subset from data

gss_subset <- tidydata %>% 
  select(age, sexnow1, racecombo, uscitzn, degree, attend, raclive, happy, health, 
         partnrs5, fear) 
```

```{r}
#| label: tbl-fear_race
#| tbl-cap: Table showing mean fear by race.  

gss_subset %>% 
  pivot_longer(
    cols = fear,
    names_to = "fear",
    values_to = "answer") %>% 
  select(racecombo, answer) %>% 
  mutate(fear = as.numeric(case_when(answer == "no" ~ "0",
                                 answer == "yes" ~ "1"))) %>% 
  select(racecombo, fear) %>% 
  group_by(racecombo) %>% 
  summarize(mean_fear = mean(fear)) %>% 
  kable(caption = "Mean Social Fear by Race",
        col.names = c("Race", "Mean"),
        digits = 3)
```


```{r}
#| label: fig-fear_race
#| fig-cap: Bar graph showing the proportion or respondants, by race, that feared walking alone at night.

gss_subset %>% 
  filter(!is.na(racecombo)) %>% 
  filter(racecombo != "Other") %>% 
  ggplot(aes(x = racecombo, y = after_stat(prop), group = fear, 
             fill = fear)) +
  geom_bar(position = "dodge") + 
  scale_y_continuous(labels = scales::percent) +
  labs(title = "Social Fear by Race",
       caption = "Question: Is there any area right around here--that is, within a mile--where you would be afraid to walk alone at night?",
       x = "Race",
       y = NULL,
       fill = "Fear"
       ) +
  theme_bw()

```



